@page "/Join/{UrlGameId}"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using SecretHitlerGameHandler.Game.GameHandling
@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage LocalStorage

<PageTitle>Join Game - Secret Hitler Online</PageTitle>

<link href="css/Title.css" rel="stylesheet"/>
<link href="css/Join.css" rel="stylesheet"/>

<h1></h1>

<p id="GameId">Game ID: @Game.GameId</p>

<h2></h2>

<div id="JoinWrapper">
    <input type="text" id="UsernameInput" @bind="UsernameInput" @oninput="Args => UsernameInput = (string?)Args.Value ?? string.Empty" placeholder="Username:"/>
    <div id="JoinButton" @onclick="JoinGame">Join</div>
</div>


@code {
    private string UsernameInput = string.Empty;
    
    [Parameter]
    public string UrlGameId { get; set; } = default!;

    private uint GameId;

    private Game Game = null!;

    protected override void OnInitialized()
    {
        bool GameIdParsed = uint.TryParse(UrlGameId, out GameId);
        
        if (!GameIdParsed) NavigationManager.NavigateTo("/Play");
        
        bool GameQuerySuccess = Games.TryQueryGame(GameId, out Game);
        
        if (!GameQuerySuccess) NavigationManager.NavigateTo("/Play");
    }

    private void JoinGame()
    {
        Game.Add(UsernameInput);

        LocalStorage.DeleteAsync(GameId.ToString());
        
        byte UserId = Game.PlayerCount;
        
        KeyValuePair<byte, string> UserIdNamePair = new(UserId, UsernameInput);
        
        LocalStorage.SetAsync($"User Storage for Game {GameId}", GameId.ToString(), UserIdNamePair);
        
        NavigationManager.NavigateTo($"/Game/{GameId}");
    }
}