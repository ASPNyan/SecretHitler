@page "/Play/{Page:int}"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using SecretHitlerGameHandler.Game
@using SecretHitlerServerFrontend.Classes
@inject ProtectedLocalStorage BrowserStorage
@inject Games Games
@inject NavigationManager NavigationManager

<link href="css/PlayTitle.css" rel="stylesheet"/>
<link href="css/Play.css" rel="stylesheet"/>

<PageTitle>Play Secret Hitler Online</PageTitle>

<h1></h1>

<h3>Games</h3>
<div id="NewGame" @onclick='() => Navigate("/Redirect/New")'>New Game</div>
<div id="GamesWrapper">
    <div class="TopBar">
        <p class="GameName">Game Name</p>
        <p class="GameId">Game Id</p>
        <p class="GamePlayers">Current Players</p>
    </div>
    
    <div class="Game">
        <p class="GameName"></p>
        <p class="GameId"></p>
        <p class="GamePlayers"></p>
    </div>
    <div class="Game">
        <p class="GameName"></p>
        <p class="GameId"></p>
        <p class="GamePlayers"></p>
    </div>
    <div class="Game">
        <p class="GameName"></p>
        <p class="GameId"></p>
        <p class="GamePlayers"></p>
    </div>
    <div class="Game">
        <p class="GameName"></p>
        <p class="GameId"></p>
        <p class="GamePlayers"></p>
    </div>
    <div class="Game">
        <p class="GameName"></p>
        <p class="GameId"></p>
        <p class="GamePlayers"></p>
    </div>
    <div class="Game">
        <p class="GameName"></p>
        <p class="GameId"></p>
        <p class="GamePlayers"></p>
    </div>
    <div class="Game">
        <p class="GameName"></p>
        <p class="GameId"></p>
        <p class="GamePlayers"></p>
    </div>
    <div class="Game">
        <p class="GameName"></p>
        <p class="GameId"></p>
        <p class="GamePlayers"></p>
    </div>
    <div class="Game">
        <p class="GameName"></p>
        <p class="GameId"></p>
        <p class="GamePlayers"></p>
    </div>
    <div class="Game">
        <p class="GameName"></p>
        <p class="GameId"></p>
        <p class="GamePlayers"></p>
    </div>


    <div class="Footer"></div>
</div>

@for (int I = 1; I <= 10 * Page; I++)
{
    int GameNumber = (Page - 1) * 10 + I;

    Game? Game = GetGame(GameNumber);

    if (Game != null)
    {
        <style>
        .Game:nth-of-type(@I) > .GameName::before {
            content: @Game.GameName;
        }
        
        .Game:nth-of-type(@I) > .GameId::before {
            content: @Game.GameId.ToString();
        }
        
        .Game:nth-of-type(@I) > .GamePlayers::before {
            content: @(Game.PlayerCount + " / 10 Players");
        }
    </style>
    }
}

@code {

    [Parameter]
    public int Page { get; set; }

    private Game? GetGame(int GameNumber)
    {
        Dictionary<uint, Game> GameList = Games.ToDictionary();
        uint[] Keys = GameList.Keys.ToArray();
        try
        {
            return GameList[Keys[GameNumber - 1]];
        }
        catch
        {
            return null;
        }
    }
    
    private void Navigate(string Location)
    {
        NavigationManager.NavigateTo(Location);
    }
}